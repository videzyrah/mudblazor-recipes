@page "/externalplantdata"
@inject HttpClient Http

<div text-align:center>
  <h1>Gainesville Online Farmer's Market</h1>
</div>
<p>Refactoring from Vue to Blazor WASM</p>
<br>

<ul>
    <li><code>Enter your maximum price point below to filter this list</code>: $@inputValue</li>
</ul>
<p>
    <input @bind="inputValue" @bind:event="oninput" />
</p>

@if (plants == null)
{
    <p><em>Loading...</em></p>
}
else
{
<MudSimpleTable Class = "pa-6 ma-6" Style="overflow-x: auto;">
<thead>
    <tr>
        @foreach (var h in headings)
        {
            <th>@h</th>
        }
    </tr>
</thead>
<tbody>
    @foreach (var plant in plants)
    {
        <tr>
            @if (plant.Price <= inputValue)
            {
            <td><img @bind-src=@plant.Image @bind-src:event="onchange" style="width:100px;height:100px;" /></td>
            <td>@plant.Screen_name</td>
            <td>$ @plant.Price</td> 
            <td>@foreach (var retailer in plant.Retailers)
                {<span>@((MarkupString)retailer)</span>}   
            </td>
            }
        </tr>
    }
</tbody>
</MudSimpleTable>
    
}

@code {
    public int inputValue = 100;
    string[] headings = { "Image", "Name", "Average Value", "Growers" };
    private PlantList[] plants;

    protected override async Task OnInitializedAsync()
    {
        plants = await Http.GetFromJsonAsync<PlantList[]>("https://gregstull.fly.dev/plants/");
    }

    public class PlantList
    {
        public string Image { get; set; }

        public string Screen_name { get; set; }

        public float Price { get; set; }

        public string[] Retailers { get; set; }

    }
}
