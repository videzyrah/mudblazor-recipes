@page "/jaxweather"
@inject HttpClient Http

<h1>Jacksonville Current Conditions</h1>

<p>This component fails fetching data from metaweather.com. (CORS)</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>High</th>
                <th>Low</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Applicable_date.ToShortDateString()</td>
                    <td>@forecast.Max_temp</td>
                    <td>@forecast.Min_temp</td>
                    <td>@forecast.Weather_state_name</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("https://www.metaweather.com/api/location/2428344/");
    }

    public class WeatherForecast
    {
        public DateTime Applicable_date  { get; set; }

        public float Max_temp { get; set; }

        public float Min_temp { get; set; }

        public string Weather_state_name { get; set; }

        public int TemperatureF => 32 + (int)(Max_temp / 0.5556);
    }
}
